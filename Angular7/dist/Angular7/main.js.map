{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.interceptor.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/shared/user.service.ts","webpack:///./src/app/user/login/login.component.html","webpack:///./src/app/user/login/login.component.ts","webpack:///./src/app/user/registration/registration.component.html","webpack:///./src/app/user/registration/registration.component.ts","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { AuthGuard } from './auth/auth.guard';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {path:'',redirectTo:'/user/login',pathMatch:'full'},\n  {\n    path: 'user', component: UserComponent,\n    children: [\n      { path: 'registration', component: RegistrationComponent },\n      { path: 'login', component: LoginComponent }\n    ]\n  },\n  {path:'home',component:HomeComponent,canActivate:[AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Angular7';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { RegistrationComponent } from './user/registration/registration.component';\nimport { UserService } from './shared/user.service';\nimport { LoginComponent } from './user/login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthInterceptor } from './auth/auth.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    RegistrationComponent,\n    LoginComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      progressBar: true\n    }),\n    FormsModule\n  ],\n  providers: [UserService, {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n  constructor(private router: Router) {\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    if (localStorage.getItem('token') != null)\n      return true;\n    else {\n      this.router.navigate(['/user/login']);\n      return false;\n    }\n\n  }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { tap } from \"rxjs/operators\";\nimport { Router } from \"@angular/router\";\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n    constructor(private router: Router) {\n\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (localStorage.getItem('token') != null) {\n            const clonedReq = req.clone({\n                headers: req.headers.set('Authorization', 'Bearer ' + localStorage.getItem('token'))\n            });\n            return next.handle(clonedReq).pipe(\n                tap(\n                    succ => { },\n                    err => {\n                        if (err.status == 401){\n                            localStorage.removeItem('token');\n                            this.router.navigateByUrl('/user/login');\n                        }\n                    }\n                )\n            )\n        }\n        else\n            return next.handle(req.clone());\n    }\n}","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand text-white\\\">JWT Auth System</a>\\n  <button class=\\\"btn btn-danger my-2 my-sm-0\\\" (click)=\\\"onLogout()\\\">Logout</button>\\n</nav>\\n\\n<div class=\\\"card m-5\\\" style=\\\"width:18rem\\\" *ngIf=\\\"userDetails\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\"><strong>Username : </strong>{{userDetails.userName}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>FullName : </strong>{{userDetails.fullName}}</li>\\n    <li class=\\\"list-group-item\\\"><strong>Email : </strong>{{userDetails.email}}</li>\\n  </ul>\\n</div>\"","import { UserService } from './../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styles: []\n})\nexport class HomeComponent implements OnInit {\n  userDetails;\n\n  constructor(private router: Router, private service: UserService) { }\n\n  ngOnInit() {\n    this.service.getUserProfile().subscribe(\n      res => {\n        this.userDetails = res;\n      },\n      err => {\n        console.log(err);\n      },\n    );\n  }\n\n\n  onLogout() {\n    localStorage.removeItem('token');\n    this.router.navigate(['/user/login']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private fb: FormBuilder, private http: HttpClient) { }\n  readonly BaseURI = 'http://localhost:54277/api';\n\n  formModel = this.fb.group({\n    UserName: ['', Validators.required],\n    Email: ['', Validators.email],\n    FullName: [''],\n    Passwords: this.fb.group({\n      Password: ['', [Validators.required, Validators.minLength(4)]],\n      ConfirmPassword: ['', Validators.required]\n    }, { validator: this.comparePasswords })\n\n  });\n\n  comparePasswords(fb: FormGroup) {\n    let confirmPswrdCtrl = fb.get('ConfirmPassword');\n    //passwordMismatch\n    //confirmPswrdCtrl.errors={passwordMismatch:true}\n    if (confirmPswrdCtrl.errors == null || 'passwordMismatch' in confirmPswrdCtrl.errors) {\n      if (fb.get('Password').value != confirmPswrdCtrl.value)\n        confirmPswrdCtrl.setErrors({ passwordMismatch: true });\n      else\n        confirmPswrdCtrl.setErrors(null);\n    }\n  }\n\n  register() {\n    var body = {\n      UserName: this.formModel.value.UserName,\n      Email: this.formModel.value.Email,\n      FullName: this.formModel.value.FullName,\n      Password: this.formModel.value.Passwords.Password\n    };\n    return this.http.post(this.BaseURI + '/ApplicationUser/Register', body);\n  }\n\n  login(formData) {\n    return this.http.post(this.BaseURI + '/ApplicationUser/Login', formData);\n  }\n\n  getUserProfile() {\n    return this.http.get(this.BaseURI + '/UserProfile');\n  }\n}\n","module.exports = \"<img src=\\\"/assets/img/single_user.png\\\" class=\\\"mx-auto d-block\\\">\\n<form #form='ngForm' class=\\\"mb-4\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit(form)\\\">\\n  <div class=\\\"form-group\\\">\\n    <label>Username</label>\\n    <input class=\\\"form-control\\\" #UserName=\\\"ngModel\\\" name=\\\"UserName\\\" [(ngModel)]=\\\"formModel.UserName\\\" required>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Password</label>\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" #Password=\\\"ngModel\\\" name=\\\"Password\\\" [(ngModel)]=\\\"formModel.Password\\\" required>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"form.invalid\\\">Login</button>\\n    </div>\\n  </div>\\n</form>\"","import { ToastrService } from 'ngx-toastr';\nimport { UserService } from './../../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n  formModel = {\n    UserName: '',\n    Password: ''\n  }\n  constructor(private service: UserService, private router: Router, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    if (localStorage.getItem('token') != null)\n      this.router.navigateByUrl('/home');\n  }\n\n  onSubmit(form: NgForm) {\n    this.service.login(form.value).subscribe(\n      (res: any) => {\n        localStorage.setItem('token', res.token);\n        this.router.navigateByUrl('/home');\n      },\n      err => {\n        if (err.status == 400)\n          this.toastr.error('Incorrect username or password.', 'Authentication failed.');\n        else\n          console.log(err);\n      }\n    );\n  }\n}\n","module.exports = \"<form [formGroup]=\\\"service.formModel\\\" autocomplete=\\\"off\\\" (submit)=\\\"onSubmit()\\\">\\n  <div class=\\\"form-group required\\\">\\n    <label>Username</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"UserName\\\">\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('UserName').touched && service.formModel.get('UserName').errors?.required\\\">This\\n      field is mandatory.</label>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Email</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"Email\\\">\\n    <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Email').touched && service.formModel.get('Email').errors?.email\\\">Invalid\\n      email address.</label>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Full Name</label>\\n    <input class=\\\"form-control\\\" formControlName=\\\"FullName\\\">\\n  </div>\\n  <div formGroupName=\\\"Passwords\\\">\\n    <div class=\\\"form-group required\\\">\\n      <label>Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"Password\\\">\\n      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.required\\\">This\\n        field is mandatory.</label>\\n      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.Password').touched && service.formModel.get('Passwords.Password').errors?.minlength\\\">Minimum\\n        4 characters required.</label>\\n    </div>\\n    <div class=\\\"form-group required\\\">\\n      <label>Confirm Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"ConfirmPassword\\\">\\n      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.required\\\">This\\n        field is mandatory.</label>\\n      <label class=\\\"text-danger\\\" *ngIf=\\\"service.formModel.get('Passwords.ConfirmPassword').touched && service.formModel.get('Passwords.ConfirmPassword').errors?.passwordMismatch\\\">Confirm\\n        Password does not match.</label>\\n    </div>\\n  </div>\\n  <div class=\\\"form-row\\\">\\n    <div class=\\\"form-group col-md-8 offset-md-2\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-block\\\" [disabled]=\\\"!service.formModel.valid\\\">Sign Up</button>\\n    </div>\\n  </div>\\n</form>\"","import { UserService } from './../../shared/user.service';\nimport { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styles: []\n})\nexport class RegistrationComponent implements OnInit {\n\n  constructor(public service: UserService, private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.service.formModel.reset();\n  }\n\n  onSubmit() {\n    this.service.register().subscribe(\n      (res: any) => {\n        if (res.succeeded) {\n          this.service.formModel.reset();\n          this.toastr.success('New user created!', 'Registration successful.');\n        } else {\n          res.errors.forEach(element => {\n            switch (element.code) {\n              case 'DuplicateUserName':\n                this.toastr.error('Username is already taken','Registration failed.');\n                break;\n\n              default:\n              this.toastr.error(element.description,'Registration failed.');\n                break;\n            }\n          });\n        }\n      },\n      err => {\n        console.log(err);\n      }\n    );\n  }\n\n}\n","module.exports = \"<div class=\\\"wrapper\\\">\\n  <div class=\\\"wrapped-div\\\">\\n    <div class=\\\"tab-header\\\">\\n      <h2 routerLink='/user/login' routerLinkActive='active'>Sign In</h2>\\n      <h2 routerLink='/user/registration' routerLinkActive='active'>Sign Up</h2>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-10 offset-md-1\\\">\\n        <router-outlet></router-outlet>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styles: []\n})\nexport class UserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}